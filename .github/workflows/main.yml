name: Build and Package TLA Proof Manager
on:
    push:
    schedule:
        - cron: '42 5 5 * *'
jobs:
    test:
        name: Build TLAPS installer and test it
        runs-on: ${{ matrix.operating-system }}
        strategy:
            matrix:
                operating-system: [
                    macos-latest,
                    ubuntu-latest]
                ocaml-compiler: [
                    '0',
                    '1',
                    '2',
                    ]
        steps:
            - name: Install deps
              if: matrix.operating-system == 'ubuntu-latest'
              run: |
                sudo apt-get update
                sudo apt-get install --yes time
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.10'
            - uses: actions/checkout@v2
            - name: Get OCaml version
              run: |
                INDEX=${{ matrix.ocaml-compiler }}
                OCAML_VERSION=\
                `python .github/workflows/ocaml_versions.py $INDEX`
                echo "OCAML_VERSION=$OCAML_VERSION" \
                >> $GITHUB_ENV
                echo "OCAML_VERSION = $OCAML_VERSION"
            - uses: ocaml/setup-ocaml@v2
              with:
                ocaml-compiler: ${{ env.OCAML_VERSION }}
            # - uses: actions/cache@v3
            #   id: cache
            #   with:
            #     path: _build_cache
            #     key: ${{ runner.os }}_build_cache
            - name: Install optional dependencies
              if: matrix.ocaml-compiler == '2'
              run: |
                eval $(opam env)
                make opam-deps-opt
            - name: Build installer of TLAPS
              run: |
                eval $(opam env)
                make opam-deps
                make
                make release
            - name: Run a subset of `tlapm` tests
              run: |
                eval $(opam env)
                make test-inline test-fast-basic
            - name: Run all `tlapm` tests
              if: >-
                matrix.operating-system == 'ubuntu-latest' &&
                matrix.ocaml-compiler == '2'
              run: |
                eval $(opam env)
                make test
            - name: Print Test Results
              if: matrix.operating-system == 'ubuntu-latest'
              run: |
                cat _build/default/test/tests.log
